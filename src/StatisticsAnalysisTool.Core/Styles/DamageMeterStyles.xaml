<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:StatisticsAnalysisTool.Common"
                    xmlns:fa5="http://schemas.fontawesome.com/icons/"
                    xmlns:damageMeter="clr-namespace:StatisticsAnalysisTool.DamageMeter"
                    xmlns:enumerations="clr-namespace:StatisticsAnalysisTool.Enumerations">

    <!-- Damage meter icon -->
    <Style TargetType="Image" x:Key="DamageMeter.Icon">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
    </Style>

    <Style TargetType="ProgressBar" x:Key="DamageMeter.ProgressBar.Colors">
        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.UnknownWeaponType}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="sword">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Sword}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="spear">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Spear}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="quarterstaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Quarterstaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="shapeshifterstaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.ShapeShifterStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="naturestaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.NatureStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="mace">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Mace}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="holystaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.HolyStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="hammer">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Hammer}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="froststaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.FrostStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="firestaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.FireStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="dagger">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Dagger}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="cursestaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.CursedStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="knuckles">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Knuckles}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="crossbow">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Crossbow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="bow">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Bow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="axe">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Axe}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShopSubCategory}" Value="arcanestaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.ArcaneStaff}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Label" x:Key="DamageMeter.Category.DamageHeal.Color">
        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding HealthChangeType, IsAsync=True, Mode=OneWay}" Value="{x:Static enumerations:HealthChangeType.Heal}">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding HealthChangeType, IsAsync=True, Mode=OneWay}" Value="{x:Static enumerations:HealthChangeType.Damage}">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Red.4}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Image" x:Key="DamageMeter.Spell.Icon.Selector">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Source" Value="{Binding Icon, IsAsync=True, Mode=OneWay}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding SpellIndex}" Value="0">
                <Setter Property="Source" Value="../Assets/auto_attack.png" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Spell bar -->
    <DataTemplate x:Key="SpellBarTemplate" DataType="{x:Type damageMeter:UsedSpellFragment}">
        <Grid Height="auto" Width="auto" HorizontalAlignment="Stretch">
            <ProgressBar common:ProgressBarSmoother.SmoothValue="{Binding DamageInPercent}" Minimum="0" Maximum="100" MinHeight="40" Height="auto" Margin="3,0,2,1" 
                         VerticalAlignment="Top" Background="#00FFFFFF" BorderThickness="0" Foreground="{StaticResource SolidColorBrush.Accent.Blue.Transparent.3}" HorizontalAlignment="Stretch" />
            <StackPanel Orientation="Horizontal">
                <Grid Margin="10,0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Top">
                    <Image Source="{Binding Item.Icon, IsAsync=True, Mode=OneWay}" Style="{StaticResource DamageMeter.Icon}" />
                </Grid>
                <Grid Margin="0,0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Top">
                    <Image Style="{StaticResource DamageMeter.Spell.Icon.Selector}" />
                </Grid>
                <Label Content="{Binding LocalizationName}" Width="242" Margin="10,5, 0, 0" VerticalAlignment="Top" HorizontalContentAlignment="Left" />

                <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding DamagePercentage}" HorizontalContentAlignment="Left"
                       ContentStringFormat="{}{0:N2}%" Width="68" Margin="0,5" VerticalAlignment="Top" />

                <Label Style="{StaticResource DamageMeter.Category.DamageHeal.Color}" Content="{Binding DamageHealShortString}" HorizontalContentAlignment="Left"
                       Width="82" FontWeight="Bold" Margin="0,5,0,0" VerticalAlignment="Top" />

                <Label Content="{Binding Ticks}" Width="70" FontWeight="Bold" Margin="0,5, 5, 0" VerticalAlignment="Top" HorizontalContentAlignment="Left" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- Damage meter -->
    <DataTemplate x:Key="DamageMeterFragmentTemplate" DataType="{x:Type damageMeter:DamageMeterFragment}">
        <Grid>
            <Grid MinHeight="42" Height="auto">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DamageMeterStyleFragmentType}" Value="{x:Static damageMeter:DamageMeterStyleFragmentType.Damage}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="{Binding ShowSpells}" />
                </Grid.InputBindings>
                <ProgressBar common:ProgressBarSmoother.SmoothValue="{Binding DamageInPercent}" Minimum="0" Maximum="100" 
                              MinHeight="40" Height="auto" Margin="3,0,2,1" VerticalAlignment="Top" Background="#00FFFFFF" BorderThickness="0" 
                             Style="{StaticResource DamageMeter.ProgressBar.Colors}" />
                <ProgressBar common:ProgressBarSmoother.SmoothValue="{Binding HealInPercent}"
                             Minimum="0" Maximum="100" Height="2" Margin="3,0,2,2" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" Background="#00FFFFFF" BorderThickness="0">
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar">
                            <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.HealBar}" />
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
                <StackPanel Orientation="Horizontal">
                    <Grid Margin="10,0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Image Source="{Binding CauserMainHand.Icon}" Style="{StaticResource DamageMeter.Icon}" />
                    </Grid>
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding DamagePercentage}" 
                           ContentStringFormat="{}{0:N2}%" MinWidth="55" Margin="10,5" HorizontalContentAlignment="Right" VerticalAlignment="Top" />
                    <Label Content="{Binding Name}" MinWidth="125" MaxWidth="125" Margin="10,5, 0, 0" VerticalAlignment="Top" />
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding DamageShortString}" 
                           MinWidth="100" MaxWidth="100" FontWeight="Bold" Margin="10,5, 5, 0" VerticalAlignment="Top" />
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding DpsString}" 
                           ContentStringFormat="{}{0:N0}/dps" MinWidth="75" MaxWidth="75" FontWeight="Bold" Margin="10,5, 50, 0" VerticalAlignment="Top" />
                    <Grid Width="16" Height="16" Margin="0,10" VerticalAlignment="Top" ToolTip="{Binding TranslationCombatTime, FallbackValue='COMBAT_TIME'}">
                        <fa5:ImageAwesome Icon="Regular_Clock" Foreground="{StaticResource SolidColorBrush.Text.1}" />
                    </Grid>
                    <TextBlock Foreground="{StaticResource SolidColorBrush.Weapon.Text}" VerticalAlignment="Top" MinWidth="75" MaxWidth="100" FontWeight="Bold" Margin="10,10,50,0">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00}:{2:00}">
                                <Binding Path="CombatTime.Hours" />
                                <Binding Path="CombatTime.Minutes" />
                                <Binding Path="CombatTime.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
            </Grid>
            <Grid MinHeight="42" Height="auto">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DamageMeterStyleFragmentType}" Value="{x:Static damageMeter:DamageMeterStyleFragmentType.TakenDamage}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="{Binding ShowSpells}" />
                </Grid.InputBindings>
                <ProgressBar common:ProgressBarSmoother.SmoothValue="{Binding TakenDamageInPercent}" Minimum="0" Maximum="100" 
                             MinHeight="40" Height="auto" Margin="3,0,2,1" VerticalAlignment="Top" Background="#00FFFFFF" BorderThickness="0" 
                             Foreground="{StaticResource SolidColorBrush.Weapon.TakenDamageBar}" />
                <StackPanel Orientation="Horizontal">
                    <Grid Margin="10,0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Image Source="{Binding CauserMainHand.Icon}" Style="{StaticResource DamageMeter.Icon}" />
                    </Grid>
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding TakenDamagePercentage}" 
                           ContentStringFormat="{}{0:N2}%" MinWidth="55" Margin="10,5" HorizontalContentAlignment="Right" VerticalAlignment="Top" />
                    <Label Content="{Binding Name}" MinWidth="125" MaxWidth="125" Margin="10,5, 0, 0" VerticalAlignment="Top" />
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding TakenDamageShortString}" 
                           MinWidth="100" MaxWidth="100" FontWeight="Bold" Margin="10,5, 5, 0" VerticalAlignment="Top" />
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="" MinWidth="75" MaxWidth="75" 
                           FontWeight="Bold" Margin="10,5, 50, 0" VerticalAlignment="Top" />
                    <Grid Width="16" Height="16" Margin="0,10" VerticalAlignment="Top" ToolTip="{Binding TranslationCombatTime, FallbackValue='COMBAT_TIME'}">
                        <fa5:ImageAwesome Icon="Regular_Clock" Foreground="{StaticResource SolidColorBrush.Text.1}" />
                    </Grid>
                    <TextBlock Foreground="{StaticResource SolidColorBrush.Weapon.Text}" VerticalAlignment="Top" MinWidth="75" MaxWidth="100" FontWeight="Bold" Margin="10,10,50,0">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00}:{2:00}">
                                <Binding Path="CombatTime.Hours" />
                                <Binding Path="CombatTime.Minutes" />
                                <Binding Path="CombatTime.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
            </Grid>
            <Grid MinHeight="42" Height="auto">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DamageMeterStyleFragmentType}" Value="{x:Static damageMeter:DamageMeterStyleFragmentType.Heal}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="{Binding ShowSpells}" />
                </Grid.InputBindings>
                <Grid>
                    <ProgressBar common:ProgressBarSmoother.SmoothValue="{Binding HealInPercent}" Minimum="0" Maximum="100" 
                                 MinHeight="40" Height="auto" Margin="3,0,2,1" VerticalAlignment="Top" Background="#00FFFFFF" BorderThickness="0" 
                                 Foreground="{StaticResource SolidColorBrush.Weapon.HealBar}" />
                </Grid>
                <StackPanel Orientation="Horizontal">
                    <Grid Margin="10,0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Image Source="{Binding CauserMainHand.Icon}" Style="{StaticResource DamageMeter.Icon}" />
                    </Grid>
                    <StackPanel Orientation="Vertical" Margin="10,0" MinWidth="55" VerticalAlignment="Top" Height="40">
                        <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding HealPercentage}" 
                               ContentStringFormat="{}{0:N2}%" Margin="0,5,0,0" Padding="0" HorizontalContentAlignment="Right" VerticalAlignment="Top" 
                               ToolTip="{Binding TranslationHealingWithoutOverhealed}" />
                        <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Opacity="0.50" Content="{Binding OverhealedPercentageOfTotalHealing}" 
                               ContentStringFormat="{}{0:N2}%" Margin="0,-15,0,0" Padding="0,0" HorizontalContentAlignment="Right" VerticalAlignment="Top" VerticalContentAlignment="Top"
                               ToolTip="{Binding TranslationOverhealedPercentageOfTotalHealing}" />
                    </StackPanel>
                    <Label Content="{Binding Name}" MinWidth="125" MaxWidth="125" Margin="10,5, 0, 0" VerticalAlignment="Top" />
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding HealShortString}" 
                           MinWidth="100" MaxWidth="100" FontWeight="Bold" Margin="10,5, 5, 0" VerticalAlignment="Top" />
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding HpsString}" 
                           ContentStringFormat="{}{0:N0}/hps" MinWidth="75" MaxWidth="75" FontWeight="Bold" Margin="10,5, 50, 0" VerticalAlignment="Top" />
                    <Grid Width="16" Height="16" Margin="0,10" VerticalAlignment="Top" ToolTip="{Binding TranslationCombatTime, FallbackValue='COMBAT_TIME'}">
                        <fa5:ImageAwesome Icon="Regular_Clock" Foreground="{StaticResource SolidColorBrush.Text.1}" />
                    </Grid>
                    <TextBlock Foreground="{StaticResource SolidColorBrush.Weapon.Text}" VerticalAlignment="Top" MinWidth="75" MaxWidth="100" FontWeight="Bold" Margin="10,10,50,0">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00}:{2:00}">
                                <Binding Path="CombatTime.Hours" />
                                <Binding Path="CombatTime.Minutes" />
                                <Binding Path="CombatTime.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
            </Grid>
            <Grid Margin="10,41,0,3" VerticalAlignment="Top" HorizontalAlignment="Stretch" Visibility="{Binding SpellsContainerVisibility}">
                <StackPanel Orientation="Horizontal" Height="24" HorizontalAlignment="Stretch" Margin="2,0,2,0" VerticalAlignment="Top" Background="{StaticResource SolidColorBrush.Accent.Blue.Transparent.5}">
                    <Label Content="" Width="96" />
                    <Label Content="{Binding TranslationName}" FontWeight="Bold" Width="244" Foreground="{StaticResource SolidColorBrush.Accent.Blue.2}" />
                    <Label Content="{Binding TranslationDmgPercent}" FontWeight="Bold" Width="64" Foreground="{StaticResource SolidColorBrush.Accent.Blue.2}" />
                    <Label Content="{Binding TranslationDamageHeal}" FontWeight="Bold" Width="84" Foreground="{StaticResource SolidColorBrush.Accent.Blue.2}"  />
                    <Label Content="{Binding TranslationTicks}" FontWeight="Bold" Width="70" Foreground="{StaticResource SolidColorBrush.Accent.Blue.2}" />
                </StackPanel>
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" Margin="0,25,0,0">
                    <ItemsControl ItemsSource="{Binding Spells, IsAsync=True}" ItemTemplate="{StaticResource SpellBarTemplate}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </Grid>
    </DataTemplate>

    <!-- Damage meter snapshot fragment -->
    <DataTemplate x:Key="DamageMeterSnapshotFragmentTemplate" DataType="{x:Type damageMeter:DamageMeterSnapshotFragment}">
        <Grid>
            <Grid MinHeight="42" Height="auto">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DamageMeterStyleFragmentType}" Value="{x:Static damageMeter:DamageMeterStyleFragmentType.Damage}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="{Binding ShowSpells}" />
                </Grid.InputBindings>
                <ProgressBar common:ProgressBarSmoother.SmoothValue="{Binding DamageInPercent}" Minimum="0" Maximum="100" 
                             MinHeight="40" Height="auto" Margin="3,0,2,1" VerticalAlignment="Top" Background="#00FFFFFF" BorderThickness="0" 
                             Style="{StaticResource DamageMeter.ProgressBar.Colors}" />
                <ProgressBar common:ProgressBarSmoother.SmoothValue="{Binding HealInPercent}" Minimum="0" Maximum="100" Height="2" 
                             Margin="3,0,2,2" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" Background="#00FFFFFF" BorderThickness="0">
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar">
                            <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.HealBar}" />
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
                <StackPanel Orientation="Horizontal">
                    <Grid Margin="10,0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Image Source="{Binding CauserMainHand.Icon}" Style="{StaticResource DamageMeter.Icon}" />
                    </Grid>
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding DamagePercentage}" 
                           ContentStringFormat="{}{0:N2}%" MinWidth="55" Margin="10,5" HorizontalContentAlignment="Right" VerticalAlignment="Top" />
                    <Label Content="{Binding Name}" MinWidth="125" MaxWidth="125" Margin="10,5, 0, 0" VerticalAlignment="Top" />
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding DamageShortString}" 
                           MinWidth="100" MaxWidth="100" FontWeight="Bold" Margin="10,5, 5, 0" VerticalAlignment="Top" />
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding DpsString}" 
                           ContentStringFormat="{}{0:N0}/dps" MinWidth="75" MaxWidth="75" FontWeight="Bold" Margin="10,5, 50, 0" VerticalAlignment="Top" />
                    <Grid Width="16" Height="16" Margin="0,10" VerticalAlignment="Top" ToolTip="{Binding TranslationCombatTime, FallbackValue='COMBAT_TIME'}">
                        <fa5:ImageAwesome Icon="Regular_Clock" Foreground="{StaticResource SolidColorBrush.Text.1}" />
                    </Grid>
                    <TextBlock Foreground="{StaticResource SolidColorBrush.Weapon.Text}" VerticalAlignment="Top" MinWidth="75" MaxWidth="100" FontWeight="Bold" Margin="10,10,50,0">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00}:{2:00}">
                                <Binding Path="CombatTime.Hours" />
                                <Binding Path="CombatTime.Minutes" />
                                <Binding Path="CombatTime.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
            </Grid>
            <Grid MinHeight="42" Height="auto">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DamageMeterStyleFragmentType}" Value="{x:Static damageMeter:DamageMeterStyleFragmentType.TakenDamage}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="{Binding ShowSpells}" />
                </Grid.InputBindings>
                <ProgressBar common:ProgressBarSmoother.SmoothValue="{Binding TakenDamageInPercent}" Minimum="0" Maximum="100" 
                 MinHeight="40" Height="auto" Margin="3,0,2,1" VerticalAlignment="Top" Background="#00FFFFFF" BorderThickness="0" 
                 Foreground="{StaticResource SolidColorBrush.Weapon.TakenDamageBar}" />
                <StackPanel Orientation="Horizontal">
                    <Grid Margin="10,0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Image Source="{Binding CauserMainHand.Icon}" Style="{StaticResource DamageMeter.Icon}" />
                    </Grid>
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding TakenDamagePercentage}" 
               ContentStringFormat="{}{0:N2}%" MinWidth="55" Margin="10,5" HorizontalContentAlignment="Right" VerticalAlignment="Top" />
                    <Label Content="{Binding Name}" MinWidth="125" MaxWidth="125" Margin="10,5, 0, 0" VerticalAlignment="Top" />
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding TakenDamageShortString}" 
               MinWidth="100" MaxWidth="100" FontWeight="Bold" Margin="10,5, 5, 0" VerticalAlignment="Top" />
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="" MinWidth="75" MaxWidth="75" 
               FontWeight="Bold" Margin="10,5, 50, 0" VerticalAlignment="Top" />
                    <Grid Width="16" Height="16" Margin="0,10" VerticalAlignment="Top" ToolTip="{Binding TranslationCombatTime, FallbackValue='COMBAT_TIME'}">
                        <fa5:ImageAwesome Icon="Regular_Clock" Foreground="{StaticResource SolidColorBrush.Text.1}" />
                    </Grid>
                    <TextBlock Foreground="{StaticResource SolidColorBrush.Weapon.Text}" VerticalAlignment="Top" MinWidth="75" MaxWidth="100" FontWeight="Bold" Margin="10,10,50,0">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00}:{2:00}">
                                <Binding Path="CombatTime.Hours" />
                                <Binding Path="CombatTime.Minutes" />
                                <Binding Path="CombatTime.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
            </Grid>
            <Grid MinHeight="42" Height="auto">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DamageMeterStyleFragmentType}" Value="{x:Static damageMeter:DamageMeterStyleFragmentType.Heal}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <ProgressBar common:ProgressBarSmoother.SmoothValue="{Binding HealInPercent}" Minimum="0" Maximum="100" 
                             Height="40" Margin="3,1,2,1" VerticalAlignment="Top" Background="#00FFFFFF" BorderThickness="0" 
                             Style="{StaticResource DamageMeter.ProgressBar.Colors}" />
                <StackPanel Orientation="Horizontal">
                    <Grid Margin="10,0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Image Source="{Binding CauserMainHand.Icon}" Style="{StaticResource DamageMeter.Icon}" />
                    </Grid>
                    <StackPanel Orientation="Vertical" Margin="10,0" MinWidth="55" VerticalAlignment="Top" Height="40">
                        <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding HealPercentage}" 
                               ContentStringFormat="{}{0:N2}%" Margin="0,5,0,0" Padding="0" HorizontalContentAlignment="Right" VerticalAlignment="Top" />
                        <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Opacity="0.50" Content="{Binding OverhealedPercentageOfTotalHealing}" 
                               ContentStringFormat="{}{0:N2}%" Margin="0,-15,0,0" Padding="0,0" HorizontalContentAlignment="Right" VerticalAlignment="Top" VerticalContentAlignment="Top" />
                    </StackPanel>
                    <Label Content="{Binding Name}" MinWidth="125" MaxWidth="125" Margin="10,5, 0, 0" VerticalAlignment="Top" />
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding HealShortString}" 
                           MinWidth="100" MaxWidth="100" FontWeight="Bold" Margin="10,5, 5, 0" VerticalAlignment="Top" />
                    <Label Foreground="{StaticResource SolidColorBrush.Weapon.Text}" Content="{Binding HpsString}" 
                           ContentStringFormat="{}{0:N0}/hps" MinWidth="75" MaxWidth="75" FontWeight="Bold" Margin="10,5, 50, 0" VerticalAlignment="Top" />
                    <Grid Width="16" Height="16" Margin="0,10" VerticalAlignment="Top" ToolTip="{Binding TranslationCombatTime, FallbackValue='COMBAT_TIME'}">
                        <fa5:ImageAwesome Icon="Regular_Clock" Foreground="{StaticResource SolidColorBrush.Text.1}" />
                    </Grid>
                    <TextBlock Foreground="{StaticResource SolidColorBrush.Weapon.Text}" MinWidth="75" MaxWidth="100" FontWeight="Bold" Margin="10,13,50,0">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00}:{2:00}">
                                <Binding Path="CombatTime.Hours" />
                                <Binding Path="CombatTime.Minutes" />
                                <Binding Path="CombatTime.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
            </Grid>
            <Grid Margin="10,41,0,3" Width="auto" VerticalAlignment="Top" HorizontalAlignment="Stretch" Visibility="{Binding SpellsContainerVisibility}">
                <StackPanel Orientation="Horizontal" Height="24" HorizontalAlignment="Stretch" Margin="2,0,2,0" VerticalAlignment="Top" Background="{StaticResource SolidColorBrush.Accent.Blue.Transparent.5}">
                    <Label Content="" Width="96" />
                    <Label Content="{Binding TranslationName}" FontWeight="Bold" Width="244" Foreground="{StaticResource SolidColorBrush.Accent.Blue.2}" />
                    <Label Content="{Binding TranslationDmgPercent}" FontWeight="Bold" Width="64" Foreground="{StaticResource SolidColorBrush.Accent.Blue.2}" />
                    <Label Content="{Binding TranslationDamageHeal}" FontWeight="Bold" Width="84" Foreground="{StaticResource SolidColorBrush.Accent.Blue.2}"  />
                    <Label Content="{Binding TranslationTicks}" FontWeight="Bold" Width="70" Foreground="{StaticResource SolidColorBrush.Accent.Blue.2}" />
                </StackPanel>
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" Margin="0,25,0,0">
                    <ItemsControl ItemsSource="{Binding Spells, IsAsync=True}" ItemTemplate="{StaticResource SpellBarTemplate}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>